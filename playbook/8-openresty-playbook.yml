- hosts: all
  remote_user: root
  vars:
    project_name_to_backend_api: "sculptor-boot-backend"
    project_name_to_www_frontend: "zhenguigu-www"
    project_name_to_admin_frontend: "rcxt-react"
    project_name_to_wap_frontend: "rcxt-h5"

    location_to_backend_api: "/sculptor-boot-backend/"
    port_to_backend_api: "9091"

    domain_to_www_frontend: "www.zhenguigu.com"
    domain_to_backend_api: "lulutong-api.zhenguigu.com"
    domain_to_admin_frontend: "lulutong-admin-frontend.zhenguigu.com"
    domain_to_wap_frontend: "lulutong-wap.zhenguigu.com"

    ssl_pem_path_to_backend_api: "4565876_lulutong-api.zhenguigu.com.pem"
    ssl_key_path_to_backend_api: "4565876_lulutong-api.zhenguigu.com.key"
    ssl_pem_path_to_www_frontend: "4563886_www.zhenguigu.com.pem"
    ssl_key_path_to_www_frontend: "4563886_www.zhenguigu.com.key"
    ssl_pem_path_to_admin_frontend: "4565880_lulutong-admin-frontend.zhenguigu.com.pem"
    ssl_key_path_to_admin_frontend: "4565880_lulutong-admin-frontend.zhenguigu.com.key"
    ssl_pem_path_to_wap_frontend: "4565878_lulutong-wap.zhenguigu.com.pem"
    ssl_key_path_to_wap_frontend: "4565878_lulutong-wap.zhenguigu.com.key"
  tasks:
    - name: create directory
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - /home/jenkins/sculptor-boot-backend-upload-dir
        - /data/docker/openresty/conf
        - /data/docker/openresty/conf.d
        - /data/docker/openresty/logs
        - /data/docker/openresty/cert
        - /data/docker/openresty/html

    - name: create nginx.conf
      copy:
        dest: "/data/docker/openresty/conf/nginx.conf"
        content: |
          worker_processes  1;

          events {
              worker_connections  1024;
          }

          http {
              include       mime.types;
              default_type  application/octet-stream;

              client_body_temp_path /var/run/openresty/nginx-client-body;
              proxy_temp_path       /var/run/openresty/nginx-proxy;
              fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
              uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
              scgi_temp_path        /var/run/openresty/nginx-scgi;

              sendfile        on;

              keepalive_timeout  65;

              gzip on;
              gzip_buffers 8 16k;
              gzip_min_length 512;
              gzip_disable "MSIE [1-6]\.(?!.*SV1)";
              gzip_http_version 1.1;
              gzip_types   text/plain text/css application/javascript application/x-javascript application/json application/xml;
              client_max_body_size 20m;

              limit_req_zone $binary_remote_addr zone=contentRateLimit:10m rate=10r/s;
              limit_conn_zone $binary_remote_addr zone=perIpLimit:10m;
              limit_conn_zone $server_name zone=perServerLimit:10m;

              include /etc/nginx/conf.d/*.conf;
          }

    - name: docker run
      shell: "{{ item }}"
      with_items:
        - docker run --name openresty -p 80:80 -p 443:443 -v /home/jenkins/sculptor-boot-backend-upload-dir:/usr/local/upload -v /home/jenkins/workspace:/usr/local/workspace -v /data/docker/openresty/conf/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf -v /data/docker/openresty/logs:/usr/local/openresty/nginx/logs -v /data/docker/openresty/html:/usr/local/openresty/nginx/html -v /data/docker/openresty/conf.d:/etc/nginx/conf.d -v /data/docker/openresty/cert:/etc/nginx/cert -d openresty/openresty

    - name: create other conf file
      file:
        path="/data/docker/openresty/conf.d/{{ item }}"
        state=touch
      with_items:
        - http-redirect-https.conf
        - backend-api.conf
        - www-frontend.conf
        - admin-frontend.conf
        - wap-frontend.conf


    - name: set http-redirect-https.conf
      blockinfile:
        path: /data/docker/openresty/conf.d/http-redirect-https.conf
        marker: ""
        block: |
          server {
              listen 80;
              server_name {{ domain_to_www_frontend }} {{ domain_to_backend_api }} {{ domain_to_admin_frontend }} {{ domain_to_wap_frontend }};
              return 301 https://$server_name$request_uri;
          }

    - name: set backend-api.conf
      blockinfile:
        path: /data/docker/openresty/conf.d/backend-api.conf
        marker: ""
        block: |
          server {
              charset utf-8;
              client_max_body_size 128M;

              #listen 80;
              listen 443 ssl;

              ssl_certificate     /etc/nginx/cert/{{ ssl_pem_path_to_backend_api }};
              ssl_certificate_key /etc/nginx/cert/{{ ssl_key_path_to_backend_api }};

              ssl_session_timeout 5m;
              ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
              ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
              ssl_prefer_server_ciphers on;

              server_name {{ domain_to_backend_api }};

              location ^~ /upload {
                  root    /usr/local/upload;
                  autoindex on;
                  autoindex_exact_size off;
                  autoindex_localtime on;
              }

              location ^~ {{ location_to_backend_api }} {
                  proxy_pass http://127.0.0.1:{{ port_to_backend_api }};
                  proxy_redirect off;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;

                  limit_conn perIpLimit 10;
                  limit_conn perServerLimit 500;
                  limit_req zone=contentRateLimit burst=10 nodelay;
              }

              location ^~ /logs {
                  root    /usr/local/workspace/{{ project_name_to_backend_api }};
                  autoindex on;
                  autoindex_exact_size off;
                  autoindex_localtime on;
              }
          }

    - name: set www-frontend.conf
      blockinfile:
        path: /data/docker/openresty/conf.d/www-frontend.conf
        marker: ""
        block: |
          server {
              charset utf-8;
              client_max_body_size 128M;

              #listen 80;
              listen 443 ssl;

              ssl_certificate     /etc/nginx/cert/{{ ssl_pem_path_to_www_frontend }};
              ssl_certificate_key /etc/nginx/cert/{{ ssl_key_path_to_www_frontend }};

              ssl_session_timeout 5m;
              ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
              ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
              ssl_prefer_server_ciphers on;

              server_name {{ domain_to_www_frontend }};

              location / {
                root    /usr/local/workspace/{{ project_name_to_www_frontend }};
                index  index.html;
              }
          }

    - name: set admin-frontend.conf
      blockinfile:
        path: /data/docker/openresty/conf.d/admin-frontend.conf
        marker: ""
        block: |
          server {
              charset utf-8;
              client_max_body_size 128M;

              #listen 80;
              listen 443 ssl;

              ssl_certificate     /etc/nginx/cert/{{ ssl_pem_path_to_admin_frontend }};
              ssl_certificate_key /etc/nginx/cert/{{ ssl_key_path_to_admin_frontend }};

              ssl_session_timeout 5m;
              ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
              ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
              ssl_prefer_server_ciphers on;

              server_name {{ domain_to_admin_frontend }};

              location / {
                root    /usr/local/workspace/{{ project_name_to_admin_frontend }};
                index  index.html;
                try_files $uri $uri/ /index.html; # 如果是 history 模式还需要配置这个
              }
          }

    - name: set wap-frontend.conf
      blockinfile:
        path: /data/docker/openresty/conf.d/wap-frontend.conf
        marker: ""
        block: |
          server {
              charset utf-8;
              client_max_body_size 128M;

              #listen 80;
              listen 443 ssl;

              ssl_certificate     /etc/nginx/cert/{{ ssl_pem_path_to_wap_frontend }};
              ssl_certificate_key /etc/nginx/cert/{{ ssl_key_path_to_wap_frontend }};

              ssl_session_timeout 5m;
              ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
              ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
              ssl_prefer_server_ciphers on;

              server_name {{ domain_to_wap_frontend }};

              location / {
                root     /usr/local/workspace/{{ project_name_to_wap_frontend }};
                index    index.html;
                try_files $uri $uri/ /index.html; # 如果是 history 模式还需要配置这个
              }
          }

    - name: enable openresty
      shell: "{{ item }}"
      with_items:
        - docker restart openresty
